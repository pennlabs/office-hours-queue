# Call docker-compose -f <file> in root directory, only run one at a time

version: "3"

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  traefik:
    image: "traefik:v2.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  backend:
    image: "pennlabs/office-hours-queue-backend:latest"
    environment:
      DJANGO_SETTINGS_MODULE: officehoursqueue.settings.ci
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres"
    healthcheck:
      test: python manage.py migrate --check
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`traefik`) && (PathPrefix(`/api`) || PathPrefix(`/admin`))"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
  frontend:
    image: "pennlabs/office-hours-queue-frontend:latest"
    command: ["yarn", "start"]
    environment:
      DOMAIN: http://traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`traefik`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    volumes:
      - type: bind
        source: /tmp/test-results
        target: /app/test-results
    # https://github.com/cypress-io/cypress/issues/350
    ipc: host
  ws:
    image: "pennlabs/office-hours-queue-backend:latest"
    command: ["/usr/local/bin/asgi-run"]
    environment:
      DJANGO_SETTINGS_MODULE: officehoursqueue.settings.ci
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres"
    healthcheck:
      test: python manage.py migrate --check
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend_ws.rule=Host(`traefik`) && PathPrefix(`/api/ws`)"
      - "traefik.http.routers.backend_ws.entrypoints=web"
      - "traefik.http.services.backend_ws.loadbalancer.server.port=80"
