version: "3"

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
  redis:
    image: redis:4.0
    ports:
      - "6379:6379"
  # api, dashboard, and admin requests for proddev
  proddev-backend-wsgi:
    depends_on:
      - db
      - redis
    profiles:
      - proddev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:80"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - DJANGO_SETTINGS_MODULE=officehoursqueue.settings.proddev
    command: sh -c "python manage.py migrate && { DJANGO_SUPERUSER_PASSWORD=root python manage.py createsuperuser --no-input --username root --email root@pennlabs.org; /usr/local/bin/django-run; }"
  # Web socket requests for proddev
  proddev-backend-asgi:
    depends_on:
      - db
      - redis
    profiles:
      - proddev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:80"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - DJANGO_SETTINGS_MODULE=officehoursqueue.settings.proddev
    command: sh -c "python manage.py migrate && { DJANGO_SUPERUSER_PASSWORD=root python manage.py createsuperuser --no-input --username root --email root@pennlabs.org; /usr/local/bin/asgi-run; }"
  # frontend for proddev
  proddev-frontend:
    profiles:
      - proddev
    build:
      context: ../frontend
      dockerfile: ../frontend/Dockerfile
    ports:
      - "8003:80"
  # Reverse proxy for routing requests to the various proddev servers based on the path
  nginx:
    image: nginx:latest
    depends_on:
      - proddev-backend-wsgi
      - proddev-backend-asgi
      - proddev-frontend
    profiles:
      - proddev
    ports:
      - "8000:80"
    volumes:
      - ./nginx-proddev.conf:/etc/nginx/nginx.conf:ro
