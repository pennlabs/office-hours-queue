# Generated by Django 3.0.8 on 2020-07-30 03:22

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("course_code", models.CharField(max_length=10)),
                ("department", models.CharField(max_length=10)),
                ("course_title", models.CharField(max_length=50)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("archived", models.BooleanField(default=False)),
                ("invite_only", models.BooleanField(default=False)),
                ("video_chat_enabled", models.BooleanField(default=False)),
                ("require_video_chat_url_on_questions", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "term",
                    models.CharField(
                        choices=[
                            ("SPRING", "Spring"),
                            ("SUMMER", "Summer"),
                            ("FALL", "Fall"),
                            ("WINTER", "Winter"),
                        ],
                        default="FALL",
                        max_length=6,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Queue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("archived", models.BooleanField(default=False)),
                ("estimated_wait_time", models.IntegerField(default=0)),
                ("active", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ohq.Course"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("text", models.TextField()),
                ("video_chat_url", models.URLField(blank=True, null=True)),
                ("time_asked", models.DateTimeField(auto_now_add=True)),
                ("time_last_updated", models.DateTimeField(blank=True, null=True)),
                ("time_withdrawn", models.DateTimeField(blank=True, null=True)),
                ("time_rejected", models.DateTimeField(blank=True, null=True)),
                ("rejected_reason", models.CharField(blank=True, max_length=20, null=True)),
                ("rejected_reason_other", models.CharField(blank=True, max_length=200, null=True)),
                ("time_started", models.DateTimeField(blank=True, null=True)),
                ("time_answered", models.DateTimeField(blank=True, null=True)),
                ("should_send_up_soon_notification", models.BooleanField(default=False)),
                (
                    "answered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="answered_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "asked_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="asked_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "queue",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ohq.Queue"),
                ),
                (
                    "rejected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rejected_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sms_notifications_enabled", models.BooleanField(default=False)),
                ("sms_verification_code", models.CharField(blank=True, max_length=6, null=True)),
                ("sms_verification_timestamp", models.DateTimeField(blank=True, null=True)),
                ("sms_verified", models.BooleanField(default=False)),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MembershipInvite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("STUDENT", "Student"),
                            ("TA", "TA"),
                            ("HEAD_TA", "Head TA"),
                            ("PROFESSOR", "Professor"),
                        ],
                        default="STUDENT",
                        max_length=9,
                    ),
                ),
                ("time_created", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ohq.Course"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("STUDENT", "Student"),
                            ("TA", "TA"),
                            ("HEAD_TA", "Head TA"),
                            ("PROFESSOR", "Professor"),
                        ],
                        default="STUDENT",
                        max_length=9,
                    ),
                ),
                ("time_created", models.DateTimeField(auto_now_add=True)),
                ("last_active", models.DateTimeField(blank=True, null=True)),
                (
                    "course",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ohq.Course"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="members",
            field=models.ManyToManyField(through="ohq.Membership", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="course",
            name="semester",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ohq.Semester"),
        ),
        migrations.AddConstraint(
            model_name="queue",
            constraint=models.UniqueConstraint(fields=("course", "name"), name="unique_queue_name"),
        ),
        migrations.AddConstraint(
            model_name="membershipinvite",
            constraint=models.UniqueConstraint(
                fields=("course", "email"), name="unique_invited_course_user"
            ),
        ),
        migrations.AddConstraint(
            model_name="membership",
            constraint=models.UniqueConstraint(fields=("course", "user"), name="unique_membership"),
        ),
        migrations.AddConstraint(
            model_name="course",
            constraint=models.UniqueConstraint(
                fields=("course_code", "department", "semester"), name="unique_course_name"
            ),
        ),
    ]
